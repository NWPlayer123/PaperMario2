#pragma once

#include "texPalette.h"
#include <dolphin/gx.h>

typedef struct FadeEntry {
	u8 field_0x0[0x1C - 0x0]; //0x0
	f32 field_0x1C; //0x1C
	f32 field_0x20; //0x20
	u8 field_0x24[0x6C - 0x24]; //0x24
	s32 field_0x6C; //0x6C
	s32 field_0x70; //0x70
	u8 field_0x74[0x78 - 0x74]; //0x74
	f32 field_0x78; //0x78
	f32 field_0x7C; //0x7C
	u8 field_0x80[0x90 - 0x80]; //0x80
	u32 field_0x8C; //0x8C, TODO re-type
	f32 field_0x90; //0x90
	u8 field_0x94[0xA4 - 0x94]; //0x94
	u32 field_0xA4; //0xA4
} FadeEntry;

typedef struct FadeWork {
	u32 field_0x0; //0x0
	u32 field_0x4; //0x4
	FadeEntry entries[5]; //0x8
	s32 field_0x350; //0x350
	u32 field_0x354; //0x354
	TPLHeader* tpl_header; //0x358
	BOOL tpl_loaded; //0x35C
} FadeWork;

void fadeEntry(s32 type, s32 duration, GXColor color);
void fadeReset(u32 id);  //TODO: better param name?


void fadeInit(void);
void fadeMain(void);

BOOL fadeIsFinish(void);
